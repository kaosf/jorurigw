//<script type="text/javascript">

function DocTab(id, defaultTab) {
  this.list    = {}
  this.id      = id;
  
  var _this = this;
  DocTab.addEvent(window, 'load', function(){  _this.render(defaultTab) });
  
  <% @items.each do |name, items| %>
  this.list['<%= name %>'] = new Array();
  <% items.each_with_index do |item, key|
  %>this.list['<%= name %>'].push({
    title:'<%=h item.title %>',
    link:'<%=h item.public_uri %>',
    date:'<%=h item.published_at.strftime('%-m月%-d日') if item.published_at %>',
    section:'<%= item.creator.group.name if item.creator.group %>' });
  <% end %>
  <% end %>
  
  this.render = function(tabName) {
    var children = document.getElementById(this.id).getElementsByTagName('div');
    var tabsDiv  = null;
    var content  = null;
    for (var i = 0; i < children.length; i++) {
      if (children[i].className == 'tabs') {
        tabsDiv = children[i];
      } else if (children[i].className == 'content') {
        content = children[i];
      }
    }
    
    if (tabsDiv != null) {
      var tabs = tabsDiv.getElementsByTagName('a');
      for (var i = 0; i < tabs.length; i++) {
        if (tabs[i].className.match(new RegExp('(^| )' + tabName + '( |$)'))) {
          tabs[i].className = tabName + ' current';
        } else {
          tabs[i].className = tabs[i].className.replace(' current', '');
        }
      }
    }
    
    if (content != null) {
      var buf = '';
      if (this.list.hasOwnProperty(tabName)) {
        buf += '<ul class="' + tabName + '">';
        for (i = 0; i < this.list[tabName].length; i++) {
          buf += '<li><a href="' + this.list[tabName][i]['link'] + '">';
          buf += this.list[tabName][i]['title'] + '</a>';
          buf += ' （' + this.list[tabName][i]['date'] + '・' + this.list[tabName][i]['section'] +'）</li>' + "\n";
        }
        buf += '</ul>';
      }
      content.innerHTML = buf;
    }
    
    return false;
  }
}

function DocTab_addEvent(element, listener, func){
  try {
    element.addEventListener(listener, func, false);
  } 
  catch (e) {
    element.attachEvent('on' + listener, func);
  }
}
DocTab.addEvent = DocTab_addEvent;
