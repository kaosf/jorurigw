<%#*<p>Find me in app/views/gwsub/public/sb04/sb04stafflists/stafflists_create.html.erb</p>%>
<%
fyears = Gwsub::Sb04EditableDate.find(:all,:order=>"fyear_markjp DESC").collect{|x| [x.fy_rel.markjp,x.fyear_id]}
location = "#{Site.current_node.public_uri}stafflists_create#{@param}"

%>
<div class="gwsub sb04">
<%= render :partial => 'gwsub/public/sb04/sb04_piece_header' %>
<div class="pieceBanner">
<%= render :partial => 'gwsub/public/sb04/sb04_subfunction_select_menu' %>
<%= render :partial => 'gwsub/public/sb04/sb04_level3menu_header' %>
</div>
<div class="pieceBody">

<div class="titleLine">
 <p class="title">電子職員録作成</p>
</div>
<%= div_notice %>
<div>
<span class="explanation">
事前に登録されているデータを元に、電子職員録を作成します。<br />
既存のデータで、これから登録するデータと同じ年度の電子職員録は削除されます。<br />
また、電子職員録の作成が成功すると同時に、CSV仮データはクリアされます。<br /><br />
</span>
</div>
<% form_for :item, :url => location, :html => {:method => :post, :multipart => true, :id => 'itemForm'} do |f| %>
<%= hidden_field_tag('item[csv]','import') %>
<%= f.error_messages %>
<table class="show">
<tr>
  <th>年度</th>
  <td><%= f.select(:fyear_id, fyears, :selected => nz(@fyed_id, 0).to_i) %></td>
</tr>
</table>
<div class="preserve">
<%= submit_tag '作成' %>
</div>
<% end %>
<br />
</div>
</div>
