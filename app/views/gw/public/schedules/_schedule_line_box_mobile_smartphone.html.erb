<% # app/views/gw/public/schedules/_schedule_line_box.html.erb

### parameters check
raise ArgumentError, 'piece_header 呼び出し前に d/@st_date を設定してください。' if d.nil?

### preprocess
today = Date.today
class_str = "dateShow"

# 以下のコードで %q は qs に、%d は日付に置換されることに留意
case mode

when 'day', 'week'
  class_str += " today" if d == today
  date_format_name = 'week'
  if @schedule_move_url_directive.blank? # note/100221/nkoshiba: footer 側での呼び出しで再計算回避のみ、あやしいようなら外してください
    @schedule_move_url_directive = %Q(#{Site.current_node.public_uri}#{mode == 'day' ? '%d?%q' :
      @sp_mode == :schedule ? '?s_date=%d&amp;%q' :
      @sp_mode == :event ? 'event_week?s_date=%d' : 'show_week?s_date=%d&amp;%q'})
    @schedule_move_url_directive = %Q(#{Site.current_node.public_uri}guide?s_date=%d&mode=#{params[:mode]}) if @sp_mode == :meetings

    @schedule_move_ab = if @sp_mode == :event
      [
#        [@st_date.months_ago(1), '前月'],
        [@st_date - 7, '前週'],
#        [@st_date - 1, '前日'],
        [Date.today, '今日'],
#        [@st_date + 1, '翌日'],
        [@st_date + 7, '翌週'],
#        [@st_date.months_since(1), '翌月']
      ]
    else
      [
#        [d.months_ago(1), '前月'],
        [d-7, '前週'],
        [d-1, '前日'],
        [Date.today, '今日'],
        [d+1, '翌日'],
        [d+7, '翌週'],
#        [d.months_since(1), '翌月']
      ]
    end
  end

when 'guard'
  class_str += " today" if d == today
  date_format_name = 'week'
  if @schedule_move_url_directive.blank? # note/100221/nkoshiba: footer 側での呼び出しで再計算回避のみ、あやしいようなら外してください
    @schedule_move_url_directive = %Q(#{Site.current_node.public_uri}#{mode == 'day' ? '%d?%q' :
      @sp_mode == :schedule ? '?s_date=%d&amp;%q' : 'show_guard?s_date=%d&amp;%q'})

    @schedule_move_ab = [
#     [d.months_ago(1), '前月'],
      [d-7, '前週'],
      [d-1, '前日'],
      [Date.today, '今日'],
      [d+1, '翌日'],
      [d+7, '翌週'],
#      [d.months_since(1), '翌月']
    ]
  end

when 'month'
  raise ArgumentError, 'piece_header 呼び出し前に params[:prop_id] を設定してください。' if @sp_mode == :prop && params[:prop_id].nil?
  class_str += " today" if d.year == today.year && d.month == today.month
  date_format_name = 'month'
  if @schedule_move_url_directive.blank?
    @schedule_move_url_directive = %Q(#{Site.current_node.public_uri}show_month?s_date=%d&amp;%q)
    @schedule_move_url_directive = %Q(#{Site.current_node.public_uri}event_month?s_date=%d) if @sp_mode == :event
    @schedule_move_url_directive = %Q(#{Site.current_node.public_uri}?s_date=%d&mode=#{params[:mode]}) if @sp_mode == :meetings

    @schedule_move_ab = if @sp_mode == :event
      [
        [Date::new(@st_date.year - 1, @st_date.month, 1), '前年'],
        [@st_date.month == 1 ? Date::new(@st_date.year - 1, 12, 1) : Date::new(@st_date.year, @st_date.month - 1, 1), '前月'],
        [today, '今月'],
        [@st_date.month == 12 ? Date::new(@st_date.year + 1, 1, 1) : Date::new(@st_date.year, @st_date.month + 1, 1), '翌月'],
        [Date::new(@st_date.year + 1, @st_date.month, 1), '翌年']
      ]
    else
      [
        [Date::new(d.year - 1, d.month, 1), '前年'],
        [d.month == 1 ? Date::new(d.year - 1, 12, 1) : Date::new(d.year, d.month - 1, 1), '前月'],
        [today, '今月'],
        [d.month == 12 ? Date::new(d.year + 1, 1, 1) : Date::new(d.year, d.month + 1, 1), '翌月'],
        [Date::new(d.year + 1, d.month, 1), '翌年']
      ]
    end
  end
  # 月表示でログインユーザ以外の場合ピースヘッダに個人名表示
  case @sp_mode
  when :schedule
    unless @uid == Site.user.id
      user_name_s = Gw::Model::Schedule.get_uname(:uid=>@uid)
      user_name_s = %Q(<span class="nobr"> - #{user_name_s}</span>)
    end
  when :prop
    prop_id = Gw::Model::Schedule.get_prop_ids(params)[0]
    user_name_s = Gw::Model::Schedule.get_prop(prop_id, params).name
    user_name_s = %Q(<span class="nobr"> - #{user_name_s}</span>)
  end
end

if @sp_mode == :prop
  be_str = "&amp;be=#{params[:be]}" if !params[:be].blank?
  prop_id_str = "&amp;prop_id=#{params[:prop_id]}" if !params[:prop_id].blank?
  type_id_str = "&amp;type_id=#{params[:type_id]}" if !params[:type_id].blank?
#  @schedule_move_url_directive += "#{be_str}#{prop_id_str}#{type_id_str}"
  @schedule_move_url_directive += "#{prop_id_str}#{type_id_str}"
end

### main
    object_name = :item
    name = "calendar_move_#{move_mode}"
    tag_name = "#{object_name}[#{name}]" rescue name
    tag_id = Gw.idize(tag_name)
    options_calendar_date_select = {
      :hidden => 1, :id=>tag_id, :time=> false,
      :onchange => "calendar_schedule_redirect($F(this));",
      :image=>'/_common/themes/gw/files/icon/ic_act_calendar.gif',
    }

# 通常スケジューラーの個人スケジューラーの場合、下部のリンクは出さないようにする。
if (params[:cgid].blank? && move_mode == :header) || !params[:cgid].blank? || @sp_mode == :prop
  @content_for_form = ""
  content_for :form do
    form_for :item, :url => '', :html => {:multipart => true, :id => "schedule_#{move_mode}"} do |f|
      concat Gw::Model::MobileSchedule.show_schedule_move_core(@schedule_move_ab, @schedule_move_url_directive, @schedule_move_qs)
    end
  end
end

#dayinfo = @sp_mode == :event ? @st_date : d
dayinfo = d
concat <<-EOL
<div class="lineBox">
#{move_mode!=:header ? '' : %Q(<div class="dayInformation #{class_str}">#{date_format(schedule_settings["#{date_format_name}_view_piecehead_format"], dayinfo)}#{user_name_s}</div>)}
<div class="scheduleMove">
#{@content_for_form}
</div>
</div>
EOL

%>
