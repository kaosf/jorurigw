<%
d = @st_date

@hedder2lnk = 1
@hedder2lnk = 7 if params[:be] == "other"
@hedder2lnk = 7 if @gid.to_i != @prop_gid.to_i && params[:be].blank? && params[:s_genre] == "other" && !params[:prop_id].blank?

@hedder3lnk = 1

@view = "day"

items_all = {}
show_flg = true

case @sp_mode
when :schedule

  users = @users ? @users :  Gw::Model::Schedule.get_users(params)
  users.each{|x| items_all[x.id] = Gw::Model::Schedule.select_my_data(d, d, x.id , {:user => x, :is_gw_admin => @is_gw_admin}).select{|x| x[:genre] != :holiday}}
  show_flg = false if @users.length == 0

when :prop

  raise ArgumentError, "呼び出しが不正です" if params[:s_genre].blank?
  props = Gw::Model::Schedule.get_props(params, @is_gw_admin, {:s_other_admin_gid=>@s_other_admin_gid})
  show_flg = false if props.length == 0
  if !params[:prop_id].blank?
    _mdl = Gw::Model::Schedule.get_prop_model(params)
    prop = _mdl.find_by_id(params[:prop_id])
    show_flg = (prop.delete_state == 0 || props.length != 0) ? true : false
    if show_flg && @genre == 'other' && !@is_gw_admin
      if !Gw::PropOtherRole.is_edit?(params[:prop_id]) && !Gw::PropOtherRole.is_read?(params[:prop_id])
        show_flg = false
      end
    end
  end
  props.each{|x| items_all[x.id] = Gw::Model::Schedule.select_prop_data(d, d, x.id, params, {:is_gw_admin => @is_gw_admin, :sp_mode => @sp_mode, :s_genre => params[:s_genre]})}

end

##### 表示する予定表の「最初の時刻」と「最後の時刻」の範囲を決定
r_st, r_ed = 8, 19 # 表示する予定表の「最初の時刻」と「最後の時刻」の範囲（初期値）

items_all.each{|k,v|
  v.each{|x|
    _item = x[:item]
    if _item.is_a?(Gw::Schedule)
      r_st = 0 if x[:st_at].to_date < d
      r_st = x[:st_at].hour if x[:st_at].to_date == d && x[:st_at].hour < r_st
    end
    r_ed = 23 if _item.ed_at.to_date > d
    r_ed = _item.ed_at.hour if _item.ed_at.to_date == d && _item.ed_at.hour > r_ed
  }
}

r = (r_st..r_ed) # 表示する予定表の「最初の時刻」と「最後の時刻」の範囲

th_1hours = ''
r.each do |i|
  th_1hours += %Q(<th class="scheduleData" colspan="2"><span class="nobr t#{"%02d" % (i % 12 == 0 ? 12 : i % 12)}">#{i}</span></th>)
end

tr_header = <<-EOL
<tr class="scheduleTableHead">
<th class="scheduleUser"><span class="nobr">#{@title}</span></th>
#{th_1hours}</tr>
EOL

header_each = nz(schedule_settings[:header_each], 5).to_i rescue 5

ret = ''
if show_flg
  if @sp_mode == :schedule
    users.each_with_index{|user, ln|
      ret += tr_header if header_each == 0 && ln == 0 || header_each != 0 && ln % header_each == 0
      ret += Gw::Model::Schedule_view.show_user(r, user.id, d, params, items_all, 
        {:user=>user, :request_url => request, :schedule_settings => @schedule_settings, :is_gw_admin => @is_gw_admin, :sp_mode => @sp_mode} )
    }
  else
    props.each_with_index{|prop, ln|
      value = Gw::Model::Schedule_view.show_user(r, prop.id, d, params, items_all,
        {:request_url => request, :schedule_settings => @schedule_settings, :is_gw_admin => @is_gw_admin, :sp_mode => @sp_mode})
      ret += tr_header if header_each == 0 && ln == 0 || header_each != 0 && ln % header_each == 0
      ret += value
    }
  end
  ret += tr_header if header_each > 0
else
  ret = Gw.div_notice('表示する項目はありません。')
end

%>



<div class="piece schedulePiece dayview">
  <div class="pieceHeader">
    <%= show_notice -%>
    <%= render :partial => '/gw/public/schedules/piece_header', :locals=>{:d=>d, :mode=>'day'} %>
  </div>
  <div class="pieceBody">
    <div class="pieceBodyHeader">
      <%= render(:partial => '/gw/public/schedules/schedule_header', :locals=>{:d=>d, :mode=>'day', :show_flg => show_flg}) -%>
    </div>
    <div class="pieceBodyBody">
      <table class="scheduleTable" summary="スケジュール詳細">
        <tbody>
          <%= ret -%>
        </tbody>
      </table>
    </div>
    <div class="pieceBodyFooter">
      <%= render(:partial => '/gw/public/schedules/schedule_footer', :locals=>{:d=>d, :mode=>'day', :show_flg => show_flg}) -%>
    </div>
  </div>
</div>

<%=  gw_js_ind_popup %>
<script type="text/javascript">
//<![CDATA[
  var my_load = function() {
    gw_js_ind_popup();
  }
  window.onload = my_load;
//]]>
</script>